I"lr<h1 id="隐式intent启动activity">隐式Intent启动Activity</h1>

<h2 id="前言">前言</h2>

<p>我们在开发一个app时，最常用到的是通过Intent设置组件类名，然后启动相应的Activity。这种<strong>通过为Intent指定组件名称</strong>启动Activity的方式，我们称之为<strong>显示Intent启动Activity</strong>。举个例子：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Intent</span> <span class="n">explicitIntent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Intent</span><span class="o">();</span>
<span class="c1">//通过类启动(一般用于同一个应用)</span>
<span class="n">explicitIntent</span><span class="o">.</span><span class="na">setClass</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="nc">MainActivity</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
<span class="c1">//通过ComponentName类启动(一般用于同一组织开发的同一个或不同应用)</span>
<span class="n">explicitIntent</span><span class="o">.</span><span class="na">setComponent</span><span class="o">(</span><span class="k">new</span> <span class="nc">ComponentName</span><span class="o">((</span><span class="s">"com.thoughtworks.demo"</span><span class="o">,</span><span class="s">"com.thoughtworks.demo.MainActivity"</span><span class="o">));</span>
<span class="c1">//通过包名+完整类名启动(ComponentName类启动的一种简写调用)</span>
<span class="n">explicitIntent</span><span class="o">.</span><span class="na">setClassName</span><span class="o">(</span><span class="s">"com.thoughtworks.demo"</span><span class="o">,</span><span class="s">"com.thoughtworks.demo.MainActivity"</span><span class="o">);</span>
<span class="n">startActivity</span><span class="o">(</span><span class="n">explicitIntent</span><span class="o">);</span>
</code></pre></div></div>

<p>因为显示Intent启动Activity需要知道具体的类名包名，所以常用于同一个应用内，或者同一个组织开发的不同应用间。</p>

<h2 id="正文">正文</h2>

<p>在了解了显示Intent启动后，我们来说下今天的主题，隐式Intent启动Activity。</p>

<h3 id="什么是隐式intent启动activity">什么是隐式Intent启动Activity？</h3>

<p>通过设置Intent的action、category和data来启动Actvity的方式就是隐式Intent启动。举个例子：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Intent</span> <span class="n">implicitIntent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Intent</span><span class="o">();</span>
<span class="n">implicitIntent</span><span class="o">.</span><span class="na">setAction</span><span class="o">(</span><span class="s">"com.thoughtworks.demo.itent.action.EDIT_IMAGE"</span><span class="o">);</span>
<span class="n">implicitIntent</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="nc">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">" content://com.thoughtworks.provider.userprovider/user/1?image=avatar"</span><span class="o">));</span>
<span class="n">startActivity</span><span class="o">(</span><span class="n">implicitIntent</span><span class="o">);</span>
</code></pre></div></div>

<h3 id="隐式intent启动的是哪个activity">隐式Intent启动的是哪个Activity？</h3>

<p>具体此Intent能启动哪个Activity，需要看Activity在<strong><em>AndroidManifest.xml</em></strong>中的配置。下面给出一个配置，来具体分析隐式Intent启动Activity。</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">".MainActivity"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;intent-filter&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.EDIT_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.DEFAULT"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:scheme=</span><span class="s">"content"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:host=</span><span class="s">"com.thoughtworks.provider.userprovider"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:pathPattern=</span><span class="s">"/user/.*"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/intent-filter&gt;</span>
<span class="nt">&lt;/activity&gt;</span>
</code></pre></div></div>

<p>要<strong><em>隐式Itent启动MainActivity</em></strong>必须满足如下条件：</p>

<ul>
  <li>
    <p><strong><em>Intent-filter</em></strong>内必须<strong><em>至少包含一个category</em></strong>，<strong><em>android:name</em></strong>为<strong><em>android.intent.category.DEFAULT</em></strong>。</p>
  </li>
  <li>
    <p><strong><em>Intent-filter</em></strong>内必须<strong><em>至少包含一个action</em></strong>。</p>

    <blockquote>
      <p>intent内是否需要setAction根据setData中Uri的scheme决定（如果Uri的scheme为http, https, content等，这时候不指定intent的action，系统或者其他应用会尝试启动自己可以匹配的组件），为了能准确启动需要的组件，请在intent中调用setAction。</p>
    </blockquote>
  </li>
</ul>

<p>所以，只要一个Activity的Manifest配置满足上面2个条件，那么这个Activity一定是可以被隐式启动的。至于怎么启动，这就需要结合Intent内设置的action、category、data和AndroidManifest文件中Activity的intent-filter的匹配规则决定了。</p>

<p>是不是感觉好麻烦？要不你也不会看到这篇文章，下来我就说下intent-filter的匹配规则，其实很简单。</p>

<h3 id="intent-filter的作用和特点">intent-filter的作用和特点</h3>

<p>看名字就知道intent-filter的作用当然就是用来过滤intent的了，本质目的就是为了确定哪个intent可以和当前的组件匹配，如果匹配就启动它。所以<strong><em>intent-filter的作用就是为了隐式启动组件</em></strong>。</p>

<p>而<strong><em>intent-filter的特点有3个</em></strong>，如下:</p>

<ol>
  <li>
    <p>一个组件内可以有多组intent-filter标签。</p>
  </li>
  <li>
    <p>只要intent内的信息和任意一组intent-filter匹配，那么就可以启动这个组件。</p>
  </li>
  <li>
    <p>一组intent-filter内可以多个action、category、data。</p>

    <blockquote>
      <p>一般情况不会将多个action、category、data同时写在一组intent-filter标签内，而是会根据具体action，拆分为多组intent-filter。</p>
    </blockquote>
  </li>
</ol>

<h3 id="intent-filter的匹配">intent-filter的匹配</h3>

<p>还是举个例子：</p>

<p>intent信息：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Intent</span> <span class="n">implicitIntent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Intent</span><span class="o">();</span>
<span class="n">implicitIntent</span><span class="o">.</span><span class="na">setAction</span><span class="o">(</span><span class="s">"com.thoughtworks.demo.itent.action.EDIT_IMAGE"</span><span class="o">);</span>
<span class="c1">//implicitIntent.setAction("com.thoughtworks.demo.itent.action.SHOW_IMAGE");</span>
<span class="n">startActivity</span><span class="o">(</span><span class="n">implicitIntent</span><span class="o">);</span>
</code></pre></div></div>

<p>intent-filter信息：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">".MainActivity"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;intent-filter&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.SHOW_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.DEFAULT"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/intent-filter&gt;</span>
    <span class="nt">&lt;intent-filter&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.EDIT_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.DEFAULT"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/intent-filter&gt;</span>
<span class="nt">&lt;/activity&gt;</span>
</code></pre></div></div>

<p>implicitIntent只能有一个action(看名字就是知道setAction嘛)，这个action不管是SHOW_IMAGE还是EDIT_IMAGE都会启动MainActivity。</p>

<p>下面我们修改下intent-filter信息：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">".MainActivity"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;intent-filter&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.SHOW_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.EDIT_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.DEFAULT"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/intent-filter&gt;</span>
<span class="nt">&lt;/activity&gt;</span>
</code></pre></div></div>

<p>效果和之前的intent-filter完全一样。如果MainActivity只能负责show和edit用户的图片。我们要怎么办？我们再修改下intent-filter信息：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">".MainActivity"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;intent-filter&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.SHOW_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.EDIT_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.DEFAULT"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:scheme=</span><span class="s">"content"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:host=</span><span class="s">"com.thoughtworks.provider.userprovider"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:pathPattern=</span><span class="s">"/user/.*"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/intent-filter&gt;</span>
<span class="nt">&lt;/activity&gt;</span>
</code></pre></div></div>

<p>所以要启动MainActivity，intent信息如下：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Intent</span> <span class="n">implicitIntent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Intent</span><span class="o">();</span>
<span class="n">implicitIntent</span><span class="o">.</span><span class="na">setAction</span><span class="o">(</span><span class="s">"com.thoughtworks.demo.itent.action.EDIT_IMAGE"</span><span class="o">);</span>
<span class="c1">//implicitIntent.setAction("com.thoughtworks.demo.itent.action.SHOW_IMAGE");</span>
<span class="n">implicitIntent</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="nc">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">" content://com.thoughtworks.provider.userprovider/user/1?image=avatar"</span><span class="o">));</span>
<span class="n">startActivity</span><span class="o">(</span><span class="n">implicitIntent</span><span class="o">);</span>
</code></pre></div></div>

<p>在MainActivity中通过getData获取contentProvider的Uri地址查询user信息，在通过Uri中的query获取avatar图片完成show或edit操作。</p>

<blockquote>
  <p>如果intent中的data不能和intent-filter中data的规则匹配，是无法启动组件的。</p>
</blockquote>

<p>如果需求在复杂一点，MainActivity不仅仅可以对ContentProvider中user的图片做处理，还可以对指定域名下的网络图片做处理。我们要怎么办？我们继续修改intent-filter信息：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">".MainActivity"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;intent-filter&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.SHOW_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.EDIT_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.DEFAULT"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:scheme=</span><span class="s">"content"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:host=</span><span class="s">"com.thoughtworks.provider.userprovider"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:pathPattern=</span><span class="s">"/user/.*"</span> <span class="nt">/&gt;</span>
        
        <span class="nt">&lt;data</span> <span class="na">android:scheme=</span><span class="s">"http"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:host=</span><span class="s">"lovemumu.cn"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:pathPattern=</span><span class="s">"/assets/images/hero/.*\\.jpg"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/intent-filter&gt;</span>
<span class="nt">&lt;/activity&gt;</span>
</code></pre></div></div>

<p>intent信息为：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Intent</span> <span class="n">implicitIntent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Intent</span><span class="o">();</span>
<span class="n">implicitIntent</span><span class="o">.</span><span class="na">setAction</span><span class="o">(</span><span class="s">"com.thoughtworks.demo.itent.action.EDIT_IMAGE"</span><span class="o">);</span>
<span class="n">implicitIntent</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="nc">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"http://lovemumu.cn/assets/images/hero/Geirangerfjord-Norway.jpg"</span><span class="o">));</span>
<span class="n">startActivity</span><span class="o">(</span><span class="n">implicitIntent</span><span class="o">);</span>
</code></pre></div></div>

<p>上面的intent一样可以启动MainActivity。But！！有一个问题，如果我们把intent中的data设置为：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">implicitIntent</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="nc">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"content://lovemumu.cn/user/1?image=avatar"</span><span class="o">));</span>
</code></pre></div></div>

<p>会发生什么？我操，既然也打开了MainActivity。这显然不是我们想要的。所以此时我们应该拆分intent-filter，代码如下：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">".MainActivity"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;intent-filter&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.SHOW_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.EDIT_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.DEFAULT"</span> <span class="nt">/&gt;</span>     
        <span class="nt">&lt;data</span> <span class="na">android:scheme=</span><span class="s">"http"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:host=</span><span class="s">"lovemumu.cn"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:pathPattern=</span><span class="s">"/assets/images/hero/.*\\.jpg"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/intent-filter&gt;</span>
    <span class="nt">&lt;intent-filter&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.SHOW_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"com.thoughtworks.demo.intent.action.EDIT_IMAGE"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.DEFAULT"</span> <span class="nt">/&gt;</span> 
        <span class="nt">&lt;data</span> <span class="na">android:scheme=</span><span class="s">"http"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:host=</span><span class="s">"lovemumu.cn"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:pathPattern=</span><span class="s">"/assets/images/hero/.*\\.jpg"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/intent-filter&gt;</span>
<span class="nt">&lt;/activity&gt;</span>
</code></pre></div></div>

<p>说了这么多，大家有木有发现，我们仅仅只提到过一次category，即：Intent-filter内必须至少包含一个category<strong><em>，</em></strong>android:name为android.intent.category.DEFAULT。</p>

<p>呢到底category重要吗？看下官网的解释：</p>

<blockquote>
  <p>A string containing additional information about the kind of component that should handle the intent. Any number of category descriptions can be placed in an intent,<strong><em>but most intents do not require a category.</em></strong></p>
</blockquote>

<p>大多数情况是不需要catagory的。好吧，看来用的时候不多。但是我们还是要简单说说它。</p>

<p>category在intent-filter内可以配置多个。如果intent内有category，那么这些categories都必须包含在intent-filter内，否则无法隐式启动组件。如果intent内没有任何category，只要其他规则匹配（action，data），就可以启动组件。</p>

<h4 id="intent-filter匹配规则总结">intent-filter匹配规则总结</h4>

<p>以下规则中intent-filter都必须包含<code class="language-plaintext highlighter-rouge">&lt;category android:name="android.intent.category.DEFAULT" /&gt;</code>。</p>

<ol>
  <li>如果intent-filter内只有action(单个或多个)，只要intent内的action和intent-filter内任意一个action匹配，即可启动组件。</li>
  <li>如果intent-filter内有action和category(单个或多个),满足规则1的条件下，只要intent内的categories都属于intent-filter，即可启动组件。</li>
  <li>如果intent-filter内有action、category、data(单个或多个),满足规则1，2的条件下，只要intent内的data和intent-filter内的规则匹配，即可启动组件。</li>
</ol>

<h3 id="关于actioncategorydata的理解">关于action、category、data的理解</h3>

<p><strong><em>action：</em></strong>对于intent，action表示你期望完成什么操作。而对于组件，intent-filter内的action表示你的组件具有什么样的能力。例如：如果你的activity的intent-filter配置了android.intent.action.SEND的action，表示你的activity具有处理SEND的能力。SEND的是什么，可以根据data的mineType指定。而Inent的setAction设置了android.intent.action.SEND，表示你希望去SEND一个消息，具体是发送什么消息（文本，图片，音视频），通过intent的setType指定。而谁会去真的帮你SEND，那就要看哪些应用的组件配置了对应的action和data。其实android.intent.action.SEND是系统的action。很多第三方应用<strong><em>想要共享自己应用的能力</em></strong>，他们可以通过公开文档的形式告诉你action，但是大多数是直接使用系统的action。举个例子：</p>

<p>intent信息为：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Intent</span> <span class="n">implicitIntent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Intent</span><span class="o">();</span>
<span class="n">implicitIntent</span><span class="o">.</span><span class="na">setAction</span><span class="o">(</span><span class="s">"android.intent.action.SEND"</span><span class="o">);</span>
<span class="n">implicitIntent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span><span class="nc">Intent</span><span class="o">.</span><span class="na">EXTRA_TEXT</span><span class="o">,</span> <span class="s">"I am Twer~"</span><span class="o">);</span>
<span class="n">implicitIntent</span><span class="o">.</span><span class="na">setType</span><span class="o">(</span><span class="s">"text/plain"</span><span class="o">);</span>
<span class="n">startActivity</span><span class="o">(</span><span class="n">implicitIntent</span><span class="o">);</span>
</code></pre></div></div>

<p>intent-filter信息：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">".MainActivity"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;intent-filter&gt;</span>
        <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"android.intent.action.SEND"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:mimeType=</span><span class="s">"text/plain"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.DEFAULT"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/intent-filter&gt;</span>
<span class="nt">&lt;/activity&gt;</span>
</code></pre></div></div>

<p>此时系统会弹出应用或组件选择器，因为很多应用的组件都匹配到了你intent。例如微信会帮你SEND信息到好友或者群聊在或者朋友圈，邮件会帮你SEND信息到发送页面，百度会帮你SEND到搜索结果页面，等等。</p>

<p><strong><em>category：</em></strong>虽然说他不是很重要，但是它也有自己的应用场景。最常用的2个系统category如下：
<code class="language-plaintext highlighter-rouge">&lt;category android:name="android.intent.category.LAUNCHER" /&gt;</code>和
<code class="language-plaintext highlighter-rouge">&lt;category android:name="android.intent.category.BROWSABLE"/&gt;</code></p>

<p>LAUNCHER：这个不用多说，我们的项目的入口Activity都必须有的配置。它表示该 Activity 是任务的初始 Activity，在系统的桌面列出图标。</p>

<p>BROWSABLE：表示该 Activity 允许自身通过网络浏览器启动。举个例子：</p>

<p>intent-filter信息：</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">".MainActivity"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;intent-filter&gt;</span>
		<span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">"android.intent.action.VIEW"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.BROWSABLE"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">"android.intent.category.DEFAULT"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:scheme=</span><span class="s">"app"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:host=</span><span class="s">"thoughtworks"</span><span class="nt">/&gt;</span>
        <span class="nt">&lt;data</span> <span class="na">android:pathPrefix=</span><span class="s">"/behring"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/intent-filter&gt;</span>
<span class="nt">&lt;/activity&gt;</span>
</code></pre></div></div>

<p>此时你在手机浏览器访问连接<a href="app://thoughtworks/behring">app://thoughtworks/behring</a> 就可以拉起App的MainActivity。</p>

<blockquote>
  <p><code class="language-plaintext highlighter-rouge">android.intent.category.BROWSABLE</code>必须配合<code class="language-plaintext highlighter-rouge">android.intent.action.VIEW</code>还有<code class="language-plaintext highlighter-rouge">data</code>一起使用。</p>
</blockquote>

<p><strong><em>data：</em></strong>主要是用来传递Uri类型的数据，可以通过?key=value&amp;key=value的形式传递参数。包含的属性有<code class="language-plaintext highlighter-rouge">scheme</code>、<code class="language-plaintext highlighter-rouge">host</code>、<code class="language-plaintext highlighter-rouge">port</code>、<code class="language-plaintext highlighter-rouge">path</code>、<code class="language-plaintext highlighter-rouge">mimeType</code>、<code class="language-plaintext highlighter-rouge">pathPrefix</code>、<code class="language-plaintext highlighter-rouge">pathPattern</code>。</p>

<p>对应内容如下图：</p>

<p><img src="/assets/images/post/intent-filter-data.png" alt="" /></p>

<p>详细内容请<a href="https://developer.android.com/guide/topics/manifest/data-element">参考</a>。</p>

<blockquote>
  <p>需要注意的是，若要同时给intent设置 URI 和 MIME 类型，<strong>请勿</strong>调用 <code class="language-plaintext highlighter-rouge">setData()</code> 和 <code class="language-plaintext highlighter-rouge">setType()</code>，因为它们会互相抵消彼此的值。请始终使用 <code class="language-plaintext highlighter-rouge">setDataAndType()</code> 同时设置 URI 和 MIME 类型。</p>
</blockquote>

<h2 id="总结">总结</h2>

<p>了解了上面的知识后，我有2个问题。</p>

<ol>
  <li>
    <p>什么时候使用隐式Intent启动组件？</p>

    <p>当你需要调用其他应用的能力,包括系统能力和第三方应用能力。例如：调用拨号盘，调用微信分享，调用美图秀秀处理图片等等。</p>
  </li>
  <li>
    <p>什么时候配置自己的组件支持隐式启动？</p>

    <p>需要对外暴露自己组件的能力。例如：京东和淘宝提供”拍立得“接口，可以直接调用他们的该组件完成图片搜索购物。</p>
  </li>
</ol>

:ET